C51 COMPILER V9.53.0.0   PART7                                                             06/03/2015 10:34:31 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PART7
OBJECT MODULE PLACED IN .\Objects\part7.obj
COMPILER INVOKED BY: C:\PROGRA~2\Keil\C51\BIN\C51.EXE part7.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings
                    -\part7.lst) TABS(2) OBJECT(.\Objects\part7.obj)

line level    source

*** WARNING C500 IN LINE 1 OF part7.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          /***  Include Files  *******************************************************/
   2          
   3          #include <t89c51ac3.h>
   4          #include <string.h>
   5          #include <phys340libkeil.h>
   6          #include <stdio.h>
   7          
   8          int holes = 0;
   9          char str[15];
  10          int flag = 0;
  11          float time = 0;
  12          int overflow = 0;
  13          unsigned int hi8,lo8,prev,curr,count;
  14          int rpm;
  15          
  16          /***  Intialise external interrupt  ********************************/
  17          
  18          void initialise()
  19          {
  20   1        //PWM~~~~~~~~~~~~
  21   1        //setting CR bit to turn PCA counter on, using the CCOM register
  22   1        //CCON = 0x40;
  23   1        //setting module 0 to be a PWM output, using CCAPM0 register
  24   1        //enabling the compare mode ECOM0
  25   1        CCAPM0 = 0x42;
  26   1        CMOD = 0x01;
  27   1        
  28   1        //LDR~~~~~~~~~~~~
  29   1        //Enabling all interrupt bit pg 115
  30   1        EA = 1;
  31   1        EC = 1;
  32   1        //enabling external interrupt 0 pg 115
  33   1        EX0 = 1;
  34   1        //specifying the interrupt is to be edge triggered pg 70
  35   1        IT0 = 1;
  36   1        
  37   1        //PCA~~~~~~~~~~~~
  38   1        //Capture mode and enable CCFx interrupt bit 
  39   1        CCAPM1 = 0x21;
  40   1        //PCA Counter On
  41   1        CCON = 0x40; 
  42   1        CF=0;
  43   1        flag = 0;
  44   1        
  45   1      }
  46          
  47          void LDRinterrupt(void) interrupt 0 //address of external interrupt 0 LDR
  48          {
  49   1        if(!flag){
  50   2          flag = 1;
  51   2          
  52   2        } 
  53   1      }
C51 COMPILER V9.53.0.0   PART7                                                             06/03/2015 10:34:31 PAGE 2   

  54          
  55          void PCAinterrupt(void) interrupt 6
  56          {
  57   1        EA = 0;
  58   1        EC = 0;
  59   1        if(flag)
  60   1        {
  61   2          if(CF)
  62   2          {
  63   3            CF=0;
  64   3            overflow++;
  65   3            time = overflow/15.26;
  66   3            if(time >= 5)
  67   3              {
  68   4                flag = 0;
  69   4                overflow = 0;
  70   4                holes = 0; 
  71   4              }
  72   3          }
  73   2          if(CCF1) 
  74   2            {
  75   3              holes++; //increment # of holes each time and print it out
  76   3              hi8 = (unsigned int)(CCAP1H<<8);
  77   3              lo8 =  (unsigned int)(CCAP1L);
  78   3              prev = curr;  
  79   3              curr = hi8 + lo8 +  ((unsigned int)(65536*overflow)); 
  80   3              count = curr-prev;
  81   3              rpm = 300000/count;
  82   3              CCF1 = 0;
  83   3            }
  84   2        }
  85   1        CF = 0;
  86   1        CCF1 = 0;
  87   1        EA = 1;
  88   1        EC = 1;
  89   1      
  90   1      }
  91          
  92          /**  Main Function  ********************************************************/
  93          
  94          void main()
  95          {
  96   1        initLCD();
  97   1        initialise();
  98   1        while(1)
  99   1        {
 100   2          clearLCD();
 101   2          if(flag)
 102   2          {
 103   3            //turn on LED and motor
 104   3            P2 = 0x01;
 105   3            //EA = 0;
 106   3            CCAP0H = 0x7F;
 107   3            sprintf(str,"t=%.1f",time);
 108   3            writeLineLCD(str);
 109   3            setLCDPos(8);
 110   3            sprintf(str,"h=%i",holes); 
 111   3            writeLineLCD(str);
 112   3            setLCDPos(16);
 113   3            sprintf(str,"RPM=%i",rpm);
 114   3            writeLineLCD(str);
 115   3            delaya(1000);
C51 COMPILER V9.53.0.0   PART7                                                             06/03/2015 10:34:31 PAGE 3   

 116   3            //EA = 1;
 117   3      
 118   3            //writeCharLCD('t');
 119   3            //sprintf(str,"RPM=%i",overflow);
 120   3            //writeLineLCD(str);
 121   3      //      sprintf(str,"%i",time);
 122   3      //      setLCDPos(16);
 123   3      //      writeLineLCD(str);
 124   3          }
 125   2          else
 126   2          {
 127   3            P2 = 0x00;
 128   3            CCAP0H = 0xFF;
 129   3            writeCharLCD('f');
 130   3          }
 131   2          
 132   2        }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    599    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =     37    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
