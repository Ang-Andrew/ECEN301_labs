C51 COMPILER V9.53.0.0   SETLCDPOS                                                         05/01/2015 10:57:56 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SETLCDPOS
OBJECT MODULE PLACED IN .\Objects\setLCDpos.obj
COMPILER INVOKED BY: C:\PROGRA~2\Keil\C51\BIN\C51.EXE setLCDpos.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\List
                    -ings\setLCDpos.lst) TABS(2) OBJECT(.\Objects\setLCDpos.obj)

line level    source

*** WARNING C500 IN LINE 1 OF setLCDpos.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          /***************************************************************************/
   2          /*                                                                         */
   3          /*    Program to put info on LCD display                                   */
   4          /*                                                                         */
   5          /***************************************************************************/
   6          
   7          
   8          /***  Include Files  *******************************************************/
   9          
  10          #include <t89c51ac3.h>
  11          #include <phys340libkeil.h>
  12          #include <string.h>
  13          #include <stdio.h>
  14          
  15          //setting the control lines to bits 0 to 2 of port 4
  16            
  17          //char str[1];
  18          //string test;
  19          int secondLine;
  20          int n;
  21          int i;
  22          char str[15];
  23          
  24          unsigned char cursor;
  25          Sbit(EN,0xC0,2);//setting EN to bit 2
  26          Sbit(RW,0xC0,1); //setting RW to bit 1
  27          Sbit(RS,0xC0,0);//setting RS to bit 0
  28          
  29          /**  Main Function  ********************************************************/
  30          
  31          void my_init(){
  32   1        //***INITILIASING LCD***//
  33   1        
  34   1        P0 = 0;
  35   1        //clearing display
  36   1        RS = 0; 
  37   1        RW = 0; 
  38   1        P0 = 0x01; 
  39   1        EN = TRUE;
  40   1        delaya(1000);
  41   1        EN = FALSE;
  42   1        
  43   1        //function set
  44   1        P0 = 0;
  45   1        RS = 0;
  46   1        RW = 0;
  47   1      //  P0_5 = 1; 
  48   1      //  P0_4 = 1; //8bit interface data 
  49   1      //  P0_3 = 0; //1-line display
  50   1      //  P0_2= 0; //5x8 dot character font
  51   1        P0 = 0x38;
  52   1        EN = TRUE;
  53   1        delaya(1000);
C51 COMPILER V9.53.0.0   SETLCDPOS                                                         05/01/2015 10:57:56 PAGE 2   

  54   1        EN = FALSE;
  55   1        
  56   1        //display on/off control
  57   1        P0 = 0;
  58   1        RS = 0;
  59   1        RW = 0;
  60   1      //  P0_3 = 1; 
  61   1      //  P0_2 = 0; //display off
  62   1      //  P0_1 = 0; //cursor off
  63   1      //  P0_0 = 0; //blinking off
  64   1        P0 = 0x08;
  65   1        EN = TRUE;
  66   1        delaya(1000);
  67   1        EN = FALSE;
  68   1        
  69   1        //Entry mode set
  70   1        P0 = 0;
  71   1        RS = 0;
  72   1        RW = 0;
  73   1      //  P0_2 = 1; 
  74   1      //  P0_1 = 1; //increment by 1
  75   1      //  P0_0 = 0; //no shift
  76   1        P0 = 0x06;
  77   1        EN = TRUE;
  78   1        delaya(1000);
  79   1        EN = FALSE; 
  80   1        
  81   1        //turning lcd back on
  82   1        P0 = 0x0c;
  83   1        EN = TRUE;
  84   1        delaya(1000);
  85   1        EN = FALSE; 
  86   1        //**End of initialisation**//
  87   1        
  88   1      }
  89          
  90          void setCursor(unsigned char cur){
  91   1        //if the cursor is greater is now on the second line
  92   1        if (cur >= 0x10){
  93   2          RS = 0;
  94   2          RW = 0;
  95   2          
  96   2          P0 = 0x80+cur+0x30;
  97   2          EN = TRUE;
  98   2          delaya(1000);
  99   2          EN = FALSE;
 100   2          
 101   2        }
 102   1        //if the cursor is on the first line
 103   1        else{
 104   2        //setting DDRAM address
 105   2        RS = 0;
 106   2        RW = 0;
 107   2        
 108   2      //  P0_0 = a0;
 109   2      //  P0_1 = a1;
 110   2      //  P0_2 = a2;
 111   2      //  P0_3 = a3;
 112   2      //  P0_4 = a4;
 113   2      //  P0_5 = a5;
 114   2      //  P0_6 = a6;
 115   2      //  P0_7 = 1;
C51 COMPILER V9.53.0.0   SETLCDPOS                                                         05/01/2015 10:57:56 PAGE 3   

 116   2        
 117   2        P0 = 0x80+cur;
 118   2        
 119   2        EN = TRUE;
 120   2        delaya(1000);
 121   2        EN = FALSE;
 122   2        }
 123   1        
 124   1      
 125   1        
 126   1      }
 127          
 128          void writerCharacterLCD(unsigned char character){
 129   1        //using dataregister
 130   1        RS = 1; 
 131   1        RW = 0;
 132   1        
 133   1        //putting the character into the DDRAM
 134   1        P0 = character;
 135   1        
 136   1        EN = TRUE;
 137   1        delaya(1000);
 138   1        EN = FALSE;
 139   1        
 140   1        //back to the instruction register
 141   1        RS = 0;
 142   1      }
 143          
 144          void writeArrayLCD(unsigned char array[])
 145          {
 146   1        for(i = 0; i < 15; i++)
 147   1        {
 148   2          
 149   2          if(array[i] == 0){
 150   3            break;
 151   3          }
 152   2          writerCharacterLCD(array[i]);
 153   2          
 154   2        } 
 155   1      
 156   1      
 157   1      
 158   1      }
 159          
 160          
 161          void main()
 162          {
 163   1      //  my_init();
 164   1      //  cursor = 31;
 165   1      //  
 166   1      //  n = 1;
 167   1      //  secondLine = 0;
 168   1      //  
 169   1      //  clearLCD();
 170   1      //  setCursor(cursor);
 171   1      //  sprintf(str,"%d",n);
 172   1      //  writeLineLCD(str);
 173   1      //  delaya(10000);
 174   1        
 175   1        my_init();
 176   1        cursor = 0;
 177   1        str[0] = 'h';
C51 COMPILER V9.53.0.0   SETLCDPOS                                                         05/01/2015 10:57:56 PAGE 4   

 178   1        str[1] = 'i';
 179   1        
 180   1        
 181   1        
 182   1          n = 1;
 183   1          clearLCD();
 184   1          setCursor(cursor);
 185   1      //    sprintf(str,"%d",n);
 186   1      //    writeLineLCD(str);
 187   1          writeArrayLCD(str);   
 188   1          //writerCharacterLCD('z');
 189   1          delaya(10000);
 190   1      //    cursor++;
 191   1      //    if(cursor > 31){
 192   1      //      cursor = 0;
 193   1      //    }
 194   1        
 195   1        
 196   1        
 197   1        
 198   1        
 199   1      
 200   1          
 201   1          
 202   1        
 203   1        }
 204          
 205            
 206          
 207          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
